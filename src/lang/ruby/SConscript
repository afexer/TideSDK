#!/usr/bin/env python

# This file has been modified from its orginal sources.
#
# Copyright (c) 2012 Software in the Public Interest Inc (SPI)
# Copyright (c) 2012 David Pratt
# 
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Copyright (c) 2008-2012 Appcelerator Inc.
# 
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

from os import path
Import('build env module')

env.Append(CPPDEFINES=('TIDESDK_RUBY_API_EXPORT', 1))
build.add_thirdparty(env, 'poco')

if build.is_osx():
    env.Append(CPPPATH=[
        '/usr/lib/ruby/1.8/universal-darwin12.0',
        '/usr/lib/ruby/1.8/universal-darwin11.0',
        '/usr/lib/ruby/1.8/universal-darwin10.0',
        '/usr/lib/ruby/1.8/universal-darwin9.0',
        '/usr/lib/ruby/1.8/universal-darwin8.0',
        build.tide_include_dir])
    env.Append(LIBS=['libruby'])


elif build.is_linux():
    env.Append(CPPPATH=[
        '/usr/lib/ruby/1.8/i386-linux',
        '/usr/lib/ruby/1.8/i486-linux',
        '/usr/lib/ruby/1.8/i686-linux',
        '/usr/lib/ruby/1.8/x86_64-linux',
        '/usr/lib/ruby/1.8/powerpc-linux',
        build.tide_include_dir])

    if path.exists('/usr/lib/libruby1.8.so'):
        env.Append(LIBS=['ruby1.8'])
    else:
        env.Append(LIBS=['ruby'])

elif build.is_win32():
    env.Append(CPPPATH=[build.tp('ruby', 'lib', 'ruby', '1.8', 'i386-mswin32')])
    env.Append(LIBPATH=[build.tp('ruby', 'lib')])
    env.Append(LIBS=['msvcrt-ruby18'])

build.mark_build_target(env.SharedLibrary(
    path.join(module.dir, 'tideruby'), Glob('*.cpp')))

if build.is_win32():
    build.utils.LightWeightCopy(build.tp('ruby'), module.dir)
