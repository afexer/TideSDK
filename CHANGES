Changelog
=========

1.3.1-beta (released 2012-11-15)
--------------------------------

- Fixes related to linux SDK installer

1.3.0-beta (released 2012-11-12)
--------------------------------

- Updated to support the following platforms:
  - Windows XP
  - Windows Vista
  - Windows 7
  - Windows 8
  - Mac OSX Lion
  - Mac OSX Mountain Lion
  - Ubuntu 12.04
- Rebranded throughout.
- Updated JQuery libs.
- Updated Growl SDK integration for notifications in OSX.
- New proxy implementation to work with transparent and authentication
  proxies.
- Code base reorganized and cleaned up for future development.
- c++ namespace changes
- Kroll bridge project is not longer separately maintained. Code is now fully
  integrated into TideSDK.
- libkroll is now libtide.
- Fixes to Drillbit tests.
- Bug fixes.
- Updated documentation at http://tidesdk.multipart.net/docs/user-dev/generated
 
Breaking Changes
~~~~~~~~~~~~~~~~

- Installers will install to the following locations:
  - Windows 8: C:\ProgramData\TideSDK
  - Windows 7: C:\ProgramData\TideSDK
  - Windows Vista: C:\Documents and Settings\All Users\Application Data\TideSDK
  - Windows XP: C:\Documents and Settings\All Users\Application Data\TideSDK
  - OSX (Lion and Mountain Lion): ~/Library/Application\ Support/TideSDK
  - Ubuntu Linux: .tidesdk 
- Global JavaScript namespace is now Ti (changed from Titanium)
- Previous Titanium.Include() method has been removed.
- Modules in manifext.txt are no longer prefaced with ti.
  ie. ti.Codec is now codec
- Titanium.Network.online removed that was deprecated in 1.2.0-RC4.
   Use native methods for determining an Internet connection instead. For example:
    ```
    if(navigator.onLine) {
      // your code
    }
    ```
- Script evaluators and PHP, Python and Ruby language support has reverted to
  the previous 1.1.0 approach as illustrated in the following examples:

  PHP embedding and inclusion:
    ```
    <script type="text/php">
      // php code
    </script>
    <script type="text/php" src="file.php"/>
    <script type="text/php">
      include("another_file.php");
    </script>
    ```
    
  Python embedding and inclusion:
    ```
    <script type="text/python">
      // python code
    </script>
    <script type="text/python" src="file.py"/>
    <script type="text/python">
      import file
    </script>
    ```
    
  Ruby embedding and inclusion:
    ```
    <script type="text/ruby">
      // ruby code
    </script>
    <script type="text/ruby" src="file.rb"/>
    <script type="text/ruby">
      require 'another_file.rb'
    </script>
    ```
